CREATE TABLE logs (
  key TEXT NOT NULL,
  timestamp INTEGER NOT NULL,
  kind TEXT NOT NULL
);

CREATE TABLE tasks (
  key TEXT PRIMARY KEY NOT NULL,
  title TEXT NOT NULL,
  status TEXT NOT NULL,
  is_mine INTEGER NOT NULL DEFAULT 0,
  minutes INTEGER NOT NULL,
  current INTEGER NOT NULL DEFAULT 0
);


selectCurrent:
SELECT l.key, l.timestamp, t.title, t.status, t.is_mine, t.minutes, lp.timestamp AS pomodoro_timestamp
FROM tasks t
INNER JOIN logs l ON l.key = t.key AND l.kind = "S"
LEFT JOIN logs lp ON lp.key = l.key
    AND lp.timestamp >= l.timestamp
    AND lp.kind = "PS"
    AND (SELECT COUNT(*) FROM logs lf WHERE lf.key = l.key AND lf.kind = 'PE' AND lf.timestamp > lp.timestamp ) = 0
WHERE t.current = 1
ORDER BY lp.timestamp DESC, l.timestamp DESC
LIMIT 1;

selectLastTask:
SELECT * FROM tasks
INNER JOIN
(SELECT key, kind FROM logs WHERE kind IN ("S", "E") ORDER BY timestamp DESC LIMIT 1) logs
ON logs.key = tasks.key AND logs.kind = "E";

showAllLogs:
SELECT * FROM logs;

showAllTasks:
SELECT * FROM tasks;

startTask {
    UPDATE tasks SET current = 0;
    UPDATE tasks SET current = 1 WHERE key = :key;

    INSERT OR IGNORE INTO tasks(key, title, status, is_mine, minutes, current)
    VALUES (:key, :title, :status, :mine, 0, 1);

    INSERT INTO logs(key, timestamp, kind)
    VALUES (:key, :timestamp, "S");
}

finishTask {
    UPDATE tasks SET current = 0, minutes = minutes + :minutes WHERE key = :key;

    INSERT INTO logs(key, timestamp, kind)
    VALUES (:key, :timestamp, "E");
}

startPomodoro {
    INSERT INTO logs(key, timestamp, kind)
    VALUES (:key, :timestamp, "PS");
}

stopPomodoro {
    INSERT INTO logs(key, timestamp, kind)
    VALUES (:key, :timestamp, "PE");
}

deleteAllLogs {
    DELETE FROM logs;
}